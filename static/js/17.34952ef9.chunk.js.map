{"version":3,"sources":["views/app-views/main/constructor/ConstructorData.js","views/app-views/main/constructor/BoardCell.js","views/app-views/main/constructor/Element.js","views/app-views/main/constructor/Board.js","views/app-views/main/constructor/ElementsMenu.js","views/app-views/main/constructor/ActionsMenu.js","views/app-views/main/constructor/index.js"],"names":["ElementTypes","BoardCell","x","y","children","useDrop","accept","drop","item","collect","monitor","isOver","canDrop","ref","style","width","height","backgroundColor","border","Element","locateElement","type","id","useDrag","end","dropResult","getDropResult","opacity","isDragging","drag","src","process","alt","renderElement","addElementOnBoard","elementsOnBoard","renderCell","i","Math","floor","minWidth","minHeight","maxWidth","maxHeight","Board","board","push","getBoard","title","bodyStyle","display","margin","flexWrap","ElementsMenu","ActionsMenu","save","load","onClick","showUploadList","customRequest","marginTop","Constructor","useState","setElementsOnBoard","elementMover","prev","newElementsOnBoard","oldX","oldY","undefined","uuid","saveCoordinatesToFile","a","blob","Blob","JSON","stringify","element","document","createElement","download","href","URL","createObjectURL","body","appendChild","click","getText","file","Promise","resolve","reject","reader","FileReader","readAsText","onload","result","onerror","error","uploadCoordinatesFromFile","action","text","parse","DndProvider","backend","HTML5Backend","gutter","className","span"],"mappings":"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","file":"static/js/17.34952ef9.chunk.js","sourcesContent":["export const ElementTypes = {\r\n    TABLE: 'table',\r\n    TABLE2: 'table2'\r\n}","import {useDrop} from \"react-dnd\";\r\nimport {ElementTypes} from \"./ConstructorData\";\r\n\r\nconst BoardCell = ({x, y, children}) => {\r\n    const [{ isOver, canDrop }, drop] = useDrop(\r\n        () => ({\r\n            accept: [ElementTypes.TABLE, ElementTypes.TABLE2],\r\n            drop: (item) => {\r\n                return {x, y}\r\n            },\r\n            collect: (monitor) => ({\r\n                isOver: !!monitor.isOver(),\r\n                canDrop: !!monitor.canDrop()\r\n            })\r\n        }),\r\n        [x, y]\r\n    )\r\n    return <div\r\n        ref={drop}\r\n        style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'gray',\r\n            border: 'solid black 1px'\r\n        }}>\r\n        {children}\r\n    </div>\r\n}\r\n\r\nexport default BoardCell","import React from 'react';\r\nimport {useDrag} from \"react-dnd\";\r\n\r\n\r\nconst Element = ({locateElement, type, width, id}) => {\r\n    const [{opacity}, drag] = useDrag(\r\n        () => ({\r\n            type,\r\n            item: {id},\r\n            end: (item, monitor) => {\r\n                const dropResult = monitor.getDropResult()\r\n                if (item && dropResult) {\r\n                    locateElement(dropResult.x, dropResult.y, type, item.id)\r\n                }\r\n            },\r\n            collect: (monitor) => ({\r\n                opacity: monitor.isDragging() ? 0.4 : 1,\r\n            }),\r\n        }),\r\n        [locateElement, type],\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <img\r\n                ref={drag}\r\n                style={{opacity}}\r\n                src={process.env.PUBLIC_URL + `/img/elements/${type}.png`}\r\n                width={width ? width : '70px'}\r\n                alt='table'\r\n            /></div>)\r\n};\r\n\r\nexport default Element;","import {Card} from \"antd\";\r\nimport BoardCell from \"./BoardCell\";\r\nimport Element from \"./Element\";\r\n\r\nconst renderElement = (x, y, addElementOnBoard, elementsOnBoard) => {\r\n    if (elementsOnBoard[x][y]) {\r\n        return (\r\n        <Element\r\n            locateElement={addElementOnBoard}\r\n            type={elementsOnBoard[x][y].type}\r\n            width={'100%'}\r\n            id={elementsOnBoard[x][y].id}\r\n        />\r\n        )\r\n    }\r\n}\r\n\r\nconst renderCell = (i, addElementOnBoard, elementsOnBoard) => {\r\n    const x = i % 10\r\n    const y = Math.floor(i / 10)\r\n\r\n    return (\r\n        <div key={i} style={{minWidth: '3vw', minHeight: '3vw', maxWidth: '3vw', maxHeight: '3vw'}}>\r\n            <BoardCell x={x} y={y}>\r\n                {renderElement(x, y, addElementOnBoard, elementsOnBoard)}\r\n            </BoardCell>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst getBoard = (addElementOnBoard, elementsOnBoard) => {\r\n    const board = []\r\n\r\n    for (let i = 0; i < 100; i++) {\r\n        board.push(renderCell(i, addElementOnBoard, elementsOnBoard))\r\n    }\r\n\r\n    return board\r\n}\r\n\r\nconst Board = ({addElementOnBoard, elementsOnBoard}) => {\r\n    const board = getBoard(addElementOnBoard, elementsOnBoard)\r\n\r\n    return (\r\n        <Card title={'Карта заведения'} bodyStyle={{'padding': '20px'}}>\r\n            <div style={{\r\n                display: \"flex\",\r\n                margin: '0 auto',\r\n                flexWrap: \"wrap\",\r\n                maxWidth: '30vw',\r\n                minWidth: '30vw'\r\n            }}>\r\n                {board}\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\nexport default Board","import {Card} from \"antd\";\r\nimport Element from \"./Element\";\r\nimport {ElementTypes} from \"./ConstructorData\";\r\n\r\nconst ElementsMenu = ({locateElement}) => {\r\n    return(\r\n        <Card title={'Меню элементов'} bodyStyle={{'padding': '20px'}}>\r\n            <Element locateElement={locateElement} type={ElementTypes.TABLE}/>\r\n            <Element locateElement={locateElement} type={ElementTypes.TABLE2}/>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ElementsMenu","import {Button, Card, Upload} from \"antd\";\r\n\r\nconst ActionsMenu = ({save, load}) => {\r\n\r\n    return (\r\n        <Card bodyStyle={{'padding': '20px'}}>\r\n            <Button onClick={save} type='primary'>Сохранить в файл</Button>\r\n            <Upload showUploadList={false} accept=\".txt\" customRequest={load}>\r\n                <Button style={{marginTop: '10px'}} >Загрузить из файла</Button>\r\n            </Upload>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ActionsMenu;","import Board from \"./Board\";\r\nimport ElementsMenu from \"./ElementsMenu\";\r\nimport {Col, Row} from \"antd\";\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport {useState} from \"react\";\r\nimport {v1 as uuid} from \"uuid\";\r\nimport ActionsMenu from \"./ActionsMenu\";\r\n\r\nconst Constructor = () => {\r\n    const [elementsOnBoard, setElementsOnBoard] = useState(\r\n        [[], [], [], [], [], [], [], [], [], [], {}])\r\n\r\n    const elementMover = (x, y, type, id) => {\r\n        if (id) {\r\n            setElementsOnBoard(prev => {\r\n                const newElementsOnBoard = [...prev]\r\n                const oldX = newElementsOnBoard[10][id][0]\r\n                const oldY = newElementsOnBoard[10][id][1]\r\n                newElementsOnBoard[oldX][oldY] = undefined\r\n                newElementsOnBoard[x][y] = {type, id}\r\n                newElementsOnBoard[10][id] = [x, y]\r\n                return newElementsOnBoard\r\n            })\r\n        } else {\r\n            setElementsOnBoard(prev => {\r\n                const id = uuid()\r\n                const newElementsOnBoard = [...prev]\r\n                newElementsOnBoard[x][y] = {type, id}\r\n                newElementsOnBoard[10][id] = [x, y]\r\n                return newElementsOnBoard\r\n            })\r\n        }\r\n    }\r\n\r\n    const saveCoordinatesToFile = async () => {\r\n        const blob = new Blob([JSON.stringify(elementsOnBoard)], {type: 'application/json'});\r\n        const element = document.createElement('a');\r\n        element.download = 'Расстановка.txt';\r\n        element.href = URL.createObjectURL(blob);\r\n        document.body.appendChild(element);\r\n        element.click();\r\n    };\r\n\r\n    const getText = (file) =>\r\n        new Promise((resolve, reject) => {\r\n            const reader = new FileReader()\r\n            reader.readAsText(file)\r\n            reader.onload = () => resolve(reader.result)\r\n            reader.onerror = error => reject(error)\r\n        })\r\n\r\n    const uploadCoordinatesFromFile = async (action) => {\r\n        if (action) {\r\n            const text = await getText(action.file)\r\n            const newElementsOnBoard = JSON.parse(text)\r\n            setElementsOnBoard(newElementsOnBoard)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n            <Row gutter={16}>\r\n                <Col className=\"gutter-row\" span={6}>\r\n                    <ElementsMenu locateElement={elementMover}/>\r\n                    <ActionsMenu\r\n                        save={saveCoordinatesToFile}\r\n                        load={uploadCoordinatesFromFile}\r\n                    />\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={18}>\r\n                    <Board\r\n                        addElementOnBoard={elementMover}\r\n                        elementsOnBoard={elementsOnBoard}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </DndProvider>)\r\n}\r\n\r\nexport default Constructor"],"sourceRoot":""}