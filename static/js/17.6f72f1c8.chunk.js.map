{"version":3,"sources":["views/app-views/main/constructor/ConstructorData.js","views/app-views/main/constructor/BoardCell.js","views/app-views/main/constructor/Element.js","views/app-views/main/constructor/Board.js","views/app-views/main/constructor/ElementsMenu.js","views/app-views/main/constructor/ActionsMenu.js","views/app-views/main/constructor/index.js"],"names":["ElementTypes","TABLE","TABLE2","TABLE3","BoardCell","x","y","children","useDrop","accept","Object","values","drop","collect","monitor","isOver","ref","style","width","height","backgroundColor","border","Element","locateElement","type","id","useDrag","item","end","dropResult","getDropResult","opacity","isDragging","drag","src","process","alt","renderElement","addElementOnBoard","elementsOnBoard","renderCell","i","Math","floor","minWidth","minHeight","maxWidth","maxHeight","Board","board","push","getBoard","title","bodyStyle","display","margin","flexWrap","ElementsMenu","gap","justifyContent","map","element","ActionsMenu","onSave","onLoad","overflow","onClick","showUploadList","customRequest","marginTop","getText","file","Promise","resolve","reject","reader","FileReader","readAsText","onload","result","onerror","error","Constructor","useState","setElementsOnBoard","elementMover","setElement","prev","newElementsOnBoard","oldX","oldY","undefined","relocateElement","uuid","placeNewElement","saveCoordinatesToFile","a","blob","Blob","JSON","stringify","document","createElement","download","href","URL","createObjectURL","body","appendChild","click","loadCoordinatesFromFile","action","text","parse","DndProvider","backend","HTML5Backend","gutter","className","span"],"mappings":"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","file":"static/js/17.6f72f1c8.chunk.js","sourcesContent":["export const ElementTypes = {\r\n    TABLE: 'table',\r\n    TABLE2: 'table2',\r\n    TABLE3: 'table3',\r\n}","import {useDrop} from \"react-dnd\";\r\nimport {ElementTypes} from \"./ConstructorData\";\r\n\r\nconst BoardCell = ({ x, y, children}) => {\r\n    const [{isOver}, drop] = useDrop(\r\n        () => ({\r\n            accept: [...Object.values(ElementTypes)],\r\n            drop: () => ({x, y}),\r\n            collect: (monitor) => ({\r\n                isOver: !!monitor.isOver() ? 'green' : 'lightgray',\r\n            })\r\n        }),\r\n        [x, y]\r\n    )\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                backgroundColor: isOver,\r\n                border: 'solid black 1px'\r\n            }}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoardCell","import React from 'react';\r\nimport {useDrag} from \"react-dnd\";\r\n\r\n\r\nconst Element = ({locateElement, type, width, id}) => {\r\n    const [{opacity}, drag] = useDrag(\r\n        () => ({\r\n            type,\r\n            item: {id},\r\n            end: (item, monitor) => {\r\n                const dropResult = monitor.getDropResult()\r\n                if (item && dropResult) {\r\n                    locateElement(dropResult.x, dropResult.y, type, item.id)\r\n                }\r\n            },\r\n            collect: (monitor) => ({\r\n                opacity: monitor.isDragging() ? 0.4 : 1,\r\n            }),\r\n        }),\r\n        [locateElement, type],\r\n    )\r\n\r\n    return (\r\n        <img\r\n            ref={drag}\r\n            style={{opacity}}\r\n            src={process.env.PUBLIC_URL + `/img/elements/${type}.png`}\r\n            width={width ? width : '70px'}\r\n            alt='table'\r\n        />\r\n\r\n    )\r\n};\r\n\r\nexport default Element;","import {Card} from \"antd\";\r\nimport BoardCell from \"./BoardCell\";\r\nimport Element from \"./Element\";\r\n\r\nconst renderElement = (x, y, addElementOnBoard, elementsOnBoard) => {\r\n    if (elementsOnBoard[x][y]) {\r\n        return (\r\n        <Element\r\n            locateElement={addElementOnBoard}\r\n            type={elementsOnBoard[x][y].type}\r\n            width={'100%'}\r\n            id={elementsOnBoard[x][y].id}\r\n        />\r\n        )\r\n    }\r\n}\r\n\r\nconst renderCell = (i, addElementOnBoard, elementsOnBoard) => {\r\n    const x = i % 10\r\n    const y = Math.floor(i / 10)\r\n    return (\r\n        <div key={i} style={{minWidth: '3vw', minHeight: '3vw', maxWidth: '3vw', maxHeight: '3vw'}}>\r\n            <BoardCell x={x} y={y}>\r\n                {renderElement(x, y, addElementOnBoard, elementsOnBoard)}\r\n            </BoardCell>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst getBoard = (addElementOnBoard, elementsOnBoard) => {\r\n    const board = []\r\n    for (let i = 0; i < 100; i++) {\r\n        board.push(renderCell(i, addElementOnBoard, elementsOnBoard))\r\n    }\r\n    return board\r\n}\r\n\r\nconst Board = ({addElementOnBoard, elementsOnBoard}) => {\r\n    const board = getBoard(addElementOnBoard, elementsOnBoard)\r\n\r\n    return (\r\n        <Card title={'Карта заведения'} bodyStyle={{'padding': '20px'}}>\r\n            <div style={{\r\n                display: \"flex\",\r\n                margin: '0 auto',\r\n                flexWrap: \"wrap\",\r\n                maxWidth: '30vw',\r\n                minWidth: '30vw'\r\n            }}>\r\n                {board}\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\nexport default Board","import {Card} from \"antd\";\r\nimport Element from \"./Element\";\r\nimport {ElementTypes} from \"./ConstructorData\";\r\n\r\nconst ElementsMenu = ({locateElement}) => {\r\n    return (\r\n        <Card title={'Меню элементов'} bodyStyle={{'padding': '20px'}}>\r\n            <div style={{display: 'flex', gap: '5px', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                {Object.values(ElementTypes).map(element => <Element locateElement={locateElement} type={element}/>)}\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ElementsMenu","import {Button, Card, Upload} from \"antd\";\r\n\r\nconst ActionsMenu = ({onSave, onLoad}) => {\r\n\r\n    return (\r\n        <Card bodyStyle={{'padding': '20px'}}>\r\n            <div style={{overflow: 'hidden'}}>\r\n                <Button style={{width: '100%'}} onClick={onSave} type='primary'>Сохранить в файл</Button>\r\n                <Upload style={{width: '100%'}} showUploadList={false} accept=\".txt\" customRequest={onLoad}>\r\n                    <Button style={{marginTop: '10px', width: '100%'}}>Загрузить из файла</Button>\r\n                </Upload>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ActionsMenu;","import Board from \"./Board\";\r\nimport ElementsMenu from \"./ElementsMenu\";\r\nimport {Col, Row} from \"antd\";\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport {useState} from \"react\";\r\nimport {v1 as uuid} from \"uuid\";\r\nimport ActionsMenu from \"./ActionsMenu\";\r\n\r\nconst getText = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader()\r\n        reader.readAsText(file)\r\n        reader.onload = () => resolve(reader.result)\r\n        reader.onerror = error => reject(error)\r\n    })\r\n\r\nconst placeNewElement = (x, y, type, setElement) => {\r\n    setElement(prev => {\r\n        const id = uuid()\r\n        const newElementsOnBoard = [...prev]\r\n        newElementsOnBoard[x][y] = {type, id}\r\n        newElementsOnBoard[10][id] = [x, y]\r\n        return newElementsOnBoard\r\n    })\r\n}\r\n\r\nconst relocateElement = (x, y, type, id, setElement) => {\r\n    setElement(prev => {\r\n        const newElementsOnBoard = [...prev]\r\n        const oldX = newElementsOnBoard[10][id][0]\r\n        const oldY = newElementsOnBoard[10][id][1]\r\n        newElementsOnBoard[oldX][oldY] = undefined\r\n        newElementsOnBoard[x][y] = {type, id}\r\n        newElementsOnBoard[10][id] = [x, y]\r\n        return newElementsOnBoard\r\n    })\r\n}\r\n\r\nconst Constructor = () => {\r\n    const [elementsOnBoard, setElementsOnBoard] = useState(\r\n        [[], [], [], [], [], [], [], [], [], [], {}])\r\n\r\n    const elementMover = (x, y, type, id) => {\r\n        if (id) {\r\n            relocateElement(x, y, type, id, setElementsOnBoard)\r\n        } else {\r\n            placeNewElement(x, y, type, setElementsOnBoard)\r\n        }\r\n    }\r\n\r\n    const saveCoordinatesToFile = async () => {\r\n        const blob = new Blob([JSON.stringify(elementsOnBoard)], {type: 'application/json'});\r\n        const element = document.createElement('a');\r\n        element.download = 'Расстановка.txt';\r\n        element.href = URL.createObjectURL(blob);\r\n        document.body.appendChild(element);\r\n        element.click();\r\n    };\r\n\r\n    const loadCoordinatesFromFile = async (action) => {\r\n        if (action) {\r\n            const text = await getText(action.file)\r\n            const newElementsOnBoard = JSON.parse(text)\r\n            setElementsOnBoard(newElementsOnBoard)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n            <Row gutter={16}>\r\n                <Col className=\"gutter-row\" span={6}>\r\n                    <ElementsMenu locateElement={elementMover}/>\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={18}>\r\n                    <Board\r\n                        addElementOnBoard={elementMover}\r\n                        elementsOnBoard={elementsOnBoard}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n                <Col className=\"gutter-row\" span={24}>\r\n                    <ActionsMenu\r\n                        onSave={saveCoordinatesToFile}\r\n                        onLoad={loadCoordinatesFromFile}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </DndProvider>)\r\n}\r\n\r\nexport default Constructor"],"sourceRoot":""}