{"version":3,"sources":["components/shared-components/Loading/index.js","redux/actions/Users.js","components/shared-components/Flex/index.js","configs/AppConfig.js","configs/EnvironmentConfig.js","history.js","auth/FetchInterceptor.js","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/Users.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","services/UsersService.js","redux/sagas/Users.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/ru_RU.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","views/index.js","App.js","serviceWorker.js","index.js","redux/actions/Auth.js","redux/constants/Users.js"],"names":["Icon","style","fontSize","spin","Loading","props","align","cover","className","indicator","defaultProps","showUsersLoading","type","SHOW_USERS_LOADING","hideUsersLoading","HIDE_USERS_LOADING","setUsers","users","SET_USERS","getUsers","GET_USERS","Flex","children","alignItems","justifyContent","mobileFlex","flexDirection","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","history","service","axios","create","baseURL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","showMessage","redirect","token","auth","state","action","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","theme","usersList","reducers","combineReducers","Theme","Auth","Users","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","payload","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","usersService","params","fetch","url","method","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","this","React","createElement","Component","mainNavTree","key","path","title","icon","breadcrumb","submenu","DashboardOutlined","ShoppingCartOutlined","BellOutlined","UserOutlined","PictureOutlined","GiftOutlined","ShopOutlined","TeamOutlined","MailOutlined","systemNavTree","SettingOutlined","MobileOutlined","navigationConfig","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","toLowerCase","list","value","filter","item","input","searchText","screens","breakpoints","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","rgb","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","configState","isCollapse","useThemeSwitcher","switcher","themes","rgbaToHex","Group","size","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","pathname","buildBreadcrumb","_","slice","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","component","lazy","from","memo","Content","AppLayout","currentRouteInfo","isNavSide","paddingLeft","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","RuLang","antdRuRU","ruMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","ru","ruLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","currentAppLocale","exact","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","hideAuthMessage","showLoading"],"mappings":"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","file":"static/js/main.04536e5b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import {\r\n    GET_USERS,\r\n    HIDE_USERS_LOADING,\r\n    SET_USERS,\r\n    SHOW_USERS_LOADING\r\n} from \"../constants/Users\";\r\n\r\nexport const showUsersLoading = () => {\r\n    return {\r\n        type: SHOW_USERS_LOADING,\r\n    };\r\n};\r\n\r\nexport const hideUsersLoading = () => {\r\n    return {\r\n        type: HIDE_USERS_LOADING,\r\n    };\r\n};\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    };\r\n};\r\n\r\nexport const getUsers = () => {\r\n    return {\r\n        type: GET_USERS,\r\n    };\r\n};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'ru',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 400 || error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import {SET_USERS, SHOW_USERS_LOADING, HIDE_USERS_LOADING} from \"../constants/Users\";\r\n\r\nconst initState = {\r\n    loading: false,\r\n    usersList: []\r\n}\r\n\r\nconst users = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_USERS_LOADING: {\r\n                return {\r\n                    ...state,\r\n                    loading: true\r\n                }\r\n            }\r\n        case HIDE_USERS_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                usersList: action.users,\r\n                loading: false\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default users","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\nimport Users from './Users';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth,\r\n    users: Users,\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import fetch from 'auth/FetchInterceptor'\r\n\r\n\r\nconst usersService = {}\r\n\r\nusersService.getUsers = function (params) {\r\n    return fetch({\r\n        url: '/users',\r\n        method: 'get',\r\n        params\r\n    })\r\n}\r\n\r\nexport default usersService","import {GET_USERS} from \"../constants/Users\";\r\nimport { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport usersService from \"../../services/UsersService\";\r\nimport {hideUsersLoading, setUsers, showUsersLoading} from \"../actions/Users\";\r\n\r\nexport function* getUsers() {\r\n    yield takeEvery(GET_USERS, function* () {\r\n        try {\r\n            yield put(showUsersLoading())\r\n            const users = yield call(usersService.getUsers);\r\n            yield put(setUsers(users));\r\n            yield put(hideUsersLoading())\r\n        } catch (error) {\r\n            yield put(hideUsersLoading())\r\n        }\r\n    });\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(getUsers),\r\n    ]);\r\n}","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\nimport Users from './Users';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n    Users(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n    ShoppingCartOutlined,\r\n    DashboardOutlined,\r\n    BellOutlined,\r\n    UserOutlined,\r\n    PictureOutlined,\r\n    GiftOutlined,\r\n    ShopOutlined,\r\n    TeamOutlined,\r\n    MailOutlined, SettingOutlined, MobileOutlined,\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst mainNavTree = [{\r\n    key: 'main',\r\n    path: `${APP_PREFIX_PATH}/main`,\r\n    title: 'sidenav.main',\r\n    icon: '',\r\n    breadcrumb: false,\r\n    submenu: [{\r\n        key: 'main-dashboard',\r\n        path: `${APP_PREFIX_PATH}/main/dashboard`,\r\n        title: 'sidenav.main.dashboard',\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: []\r\n    },\r\n        {\r\n            key: 'main-catalogue',\r\n            path: `${APP_PREFIX_PATH}/main/catalogue`,\r\n            title: 'sidenav.main.catalogue',\r\n            icon: ShoppingCartOutlined,\r\n            breadcrumb: false,\r\n            submenu: [\r\n                {\r\n                    key: 'main-catalogue-goods',\r\n                    path: `${APP_PREFIX_PATH}/main/catalogue/goods`,\r\n                    title: 'sidenav.main.catalogue.goods',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-catalogue-categories',\r\n                    path: `${APP_PREFIX_PATH}/main/catalogue/categories`,\r\n                    title: 'sidenav.main.catalogue.categories',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-catalogue-collections',\r\n                    path: `${APP_PREFIX_PATH}/main/catalogue/collections`,\r\n                    title: 'sidenav.main.catalogue.collections',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-catalogue-combos',\r\n                    path: `${APP_PREFIX_PATH}/main/catalogue/combos`,\r\n                    title: 'sidenav.main.catalogue.combos',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            key: 'main-orders',\r\n            path: `${APP_PREFIX_PATH}/main/orders`,\r\n            title: 'sidenav.main.orders',\r\n            icon: BellOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-clients',\r\n            path: `${APP_PREFIX_PATH}/main/clients`,\r\n            title: 'sidenav.main.clients',\r\n            icon: UserOutlined,\r\n            breadcrumb: true,\r\n            submenu: [{\r\n                key: 'main-clients-combos',\r\n                path: `${APP_PREFIX_PATH}/main/clients/users-list`,\r\n                title: 'sidenav.main.clients.list',\r\n                icon: '',\r\n                breadcrumb: true,\r\n                submenu: []\r\n            },\r\n                {\r\n                    key: 'main-clients-groups',\r\n                    path: `${APP_PREFIX_PATH}/main/clients/groups`,\r\n                    title: 'sidenav.main.clients.groups',\r\n                    icon: '',\r\n                    breadcrumb: true,\r\n                    submenu: []\r\n                }]\r\n        },\r\n        {\r\n            key: 'main-banners',\r\n            path: `${APP_PREFIX_PATH}/main/banners`,\r\n            title: 'sidenav.main.banners',\r\n            icon: PictureOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-promocodes',\r\n            path: `${APP_PREFIX_PATH}/main/promocodes`,\r\n            title: 'sidenav.main.promocodes',\r\n            icon: GiftOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-offlineShops',\r\n            path: `${APP_PREFIX_PATH}/main/offlineShops`,\r\n            title: 'sidenav.main.offlineShops',\r\n            icon: ShopOutlined,\r\n            breadcrumb: false,\r\n            submenu: [\r\n                {\r\n                    key: 'main-offlineShops-combos',\r\n                    path: `${APP_PREFIX_PATH}/main/offlineShops/addresses`,\r\n                    title: 'sidenav.main.offlineShops.addresses',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-offlineShops-combos',\r\n                    path: `${APP_PREFIX_PATH}/main/offlineShops/geozones`,\r\n                    title: 'sidenav.main.offlineShops.geozones',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            key: 'main-stuff',\r\n            path: `${APP_PREFIX_PATH}/main/stuff`,\r\n            title: 'sidenav.main.stuff',\r\n            icon: TeamOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-mailingLists',\r\n            path: `${APP_PREFIX_PATH}/main/mailingLists`,\r\n            title: 'sidenav.main.mailingLists',\r\n            icon: MailOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n    ],\r\n}\r\n]\r\n\r\nconst systemNavTree = [{\r\n    key: 'system',\r\n    path: `${APP_PREFIX_PATH}/system`,\r\n    title: 'sidenav.system',\r\n    icon: '',\r\n    breadcrumb: false,\r\n    submenu: [{\r\n        key: 'system-settings',\r\n        path: `${APP_PREFIX_PATH}/system/settings`,\r\n        title: 'sidenav.system.settings',\r\n        icon: SettingOutlined,\r\n        breadcrumb: false,\r\n        submenu: []\r\n    },\r\n        {\r\n            key: 'system-mobileApp',\r\n            path: `${APP_PREFIX_PATH}/system/mobileApp`,\r\n            title: 'sidenav.system.mobileApp',\r\n            icon: MobileOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'system-logs',\r\n            path: `${APP_PREFIX_PATH}/system/logs`,\r\n            title: 'sidenav.system.logs',\r\n            icon: MobileOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n    ],\r\n}]\r\n\r\nconst navigationConfig = [\r\n    ...mainNavTree,\r\n    ...systemNavTree,\r\n]\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n    isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n    let keyList = [];\r\n    let keyString = \"\";\r\n    if (key) {\r\n        const arr = key.split(\"-\");\r\n        for (let index = 0; index < arr.length; index++) {\r\n            const elm = arr[index];\r\n            index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n            keyList.push(keyString);\r\n        }\r\n    }\r\n    return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n    const { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n    const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n    const closeMobileNav = () => {\r\n        if (isMobile) {\r\n            onMobileNavToggle(false)\r\n        }\r\n    }\r\n    return (\r\n        <Menu\r\n            theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n            mode=\"inline\"\r\n            style={{ height: \"100%\", borderRight: 0 }}\r\n            defaultSelectedKeys={[routeInfo?.key]}\r\n            defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n            className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n        >\r\n            {navigationConfig.map((menu) =>\r\n                menu.submenu.length > 0 ? (\r\n                    <Menu.ItemGroup\r\n                        key={menu.key}\r\n                        title={setLocale(localization, menu.title)}\r\n                    >\r\n                        {menu.submenu.map((subMenuFirst) =>\r\n                                subMenuFirst.submenu.length > 0 ? (\r\n                                    <SubMenu\r\n                                        icon={\r\n                                            subMenuFirst.icon ? (\r\n                                                <Icon type={subMenuFirst?.icon} />\r\n                                            ) : null\r\n                                        }\r\n                                        key={subMenuFirst.key}\r\n                                        title={setLocale(localization, subMenuFirst.title)}\r\n                                    >\r\n                                        {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                                            <Menu.Item key={subMenuSecond.key}>\r\n                                                {subMenuSecond.icon ? (\r\n                                                    <Icon type={subMenuSecond?.icon} />\r\n                                                ) : null}\r\n                                                <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                                                <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                                            </Menu.Item>\r\n                                        ))}\r\n                                    </SubMenu>\r\n                                ) : (\r\n                                    <Menu.Item key={subMenuFirst.key}>\r\n                                        {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                                        <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                                        <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                                    </Menu.Item>\r\n                                )\r\n                        )}\r\n                    </Menu.ItemGroup>\r\n                ) : (\r\n                    <Menu.Item key={menu.key}>\r\n                        {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                        <span>{setLocale(localization, menu?.title)}</span>\r\n                        {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n                    </Menu.Item>\r\n                )\r\n            )}\r\n        </Menu>\r\n    );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n    const { topNavColor, localization } = props;\r\n    return (\r\n        <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n            {navigationConfig.map((menu) =>\r\n                menu.submenu.length > 0 ? (\r\n                    <SubMenu\r\n                        key={menu.key}\r\n                        popupClassName=\"top-nav-menu\"\r\n                        title={\r\n                            <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n                        }\r\n                    >\r\n                        {menu.submenu.map((subMenuFirst) =>\r\n                                subMenuFirst.submenu.length > 0 ? (\r\n                                    <SubMenu\r\n                                        key={subMenuFirst.key}\r\n                                        icon={\r\n                                            subMenuFirst.icon ? (\r\n                                                <Icon type={subMenuFirst?.icon} />\r\n                                            ) : null\r\n                                        }\r\n                                        title={setLocale(localization, subMenuFirst.title)}\r\n                                    >\r\n                                        {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                                            <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                                                <Link to={subMenuSecond.path} />\r\n                                            </Menu.Item>\r\n                                        ))}\r\n                                    </SubMenu>\r\n                                ) : (\r\n                                    <Menu.Item key={subMenuFirst.key}>\r\n                                        {subMenuFirst.icon ? (\r\n                                            <Icon type={subMenuFirst?.icon} />\r\n                                        ) : null}\r\n                                        <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                                        <Link to={subMenuFirst.path} />\r\n                                    </Menu.Item>\r\n                                )\r\n                        )}\r\n                    </SubMenu>\r\n                ) : (\r\n                    <Menu.Item key={menu.key}>\r\n                        {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                        <span>{setLocale(localization, menu?.title)}</span>\r\n                        {menu.path ? <Link to={menu.path} /> : null}\r\n                    </Menu.Item>\r\n                )\r\n            )}\r\n        </Menu>\r\n    );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n    return props.type === NAV_TYPE_SIDE ? (\r\n        <SideNavContent {...props} />\r\n    ) : (\r\n        <TopNavContent {...props} />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { sideNavTheme, topNavColor } = theme;\r\n    return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = {\r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn (\r\n\t\t  <Breadcrumb.Item key={url}>\r\n\t\t\t<Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t  </Breadcrumb.Item>\r\n\t\t);\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/main`} component={lazy(() => import(`./main`))} />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/main`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdRuRU from 'antd/es/locale/ru_RU';\r\nimport ruMsg from \"../locales/ru_RU.json\";\r\n\r\nconst RuLang = {\r\n    antd: antdRuRU,\r\n    locale: 'ru-RU',\r\n    messages: {\r\n        ...ruMsg\r\n    },\r\n};\r\nexport default RuLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport ruLang from './entries/ru_RU';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    ru: ruLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <HashRouter>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </HashRouter>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","export const SHOW_USERS_LOADING = 'SHOW_USERS_LOADING'\r\nexport const HIDE_USERS_LOADING = 'HIDE_USERS_LOADING'\r\nexport const SET_USERS = 'SET_USERS'\r\nexport const GET_USERS = 'GET_USERS'"],"sourceRoot":""}